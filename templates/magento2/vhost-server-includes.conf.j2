#jinja2: lstrip_blocks: True
# {{ ansible_managed }}

set $MAGE_ROOT {{ release_pub_dir }};
set $MAGE_MODE {{ mage_run_mode }};

if ($http_x_forwarded_proto = "https") {
    set $is_https "1";
}

# NOTE: if the request is over http
if ($http_x_forwarded_proto != 'https') {
    set $unsecure true;
}

# NOTE: if the request is from aws alb
if ($http_x_amzn_trace_id) {
    set $unsecure "${unsecure}+aws";
}

# NOTE: redirect any http request from aws alb
if ($unsecure = "true+aws") {
    return 301 https://$server_name$request_uri;
}

root {{ release_pub_dir }};

index index.php;
autoindex off;
charset UTF-8;
error_page 404 403 = /errors/404.php;

{% for file in nginx_snippet_includes %}
    include snippets/{{ file }};
{% endfor %}

# NOTE: lock down phpinfo
location ~ ^/phpinfo.php$ {
    access_log off;

    allow 127.0.0.1;
    allow 10.0.0.0/8;    # aws internal
    allow 96.71.160.117; # ergon office
    deny  all;

    include      snippets/fastcgi-php.conf;
    fastcgi_pass fastcgi_backend;
}

# NOTE: silence any health checks
location ~ ^/health_check.php$ {
    alias /var/www/;
    access_log off;

    include      snippets/fastcgi-php.conf;
    fastcgi_pass fastcgi_backend;
}

# Please use the CLI for setup/update purposes
location ~* ^/(setup|update)($|/) {
    deny all;
}

location / {
    try_files $uri $uri/ /index.php$is_args$args;
}

location /pub/ {
    location ~ ^/pub/media/(downloadable|customer|import|theme_customization/.*\.xml) {
        deny all;
    }
    alias $MAGE_ROOT/pub/;
    add_header X-Frame-Options "SAMEORIGIN";
}

location /static/ {
    if ($MAGE_MODE = "production") {
        expires max;
    }

    # Remove signature of the static files that is used to overcome the browser cache
    location ~ ^/static/version {
        rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        expires +1y;

        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;

        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
    }
    if (!-f $request_filename) {
        rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/ {
    try_files $uri $uri/ /get.php$is_args$args;

    location ~ ^/media/theme_customization/.*\.xml {
        deny all;
    }

    location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
        add_header Cache-Control "public";
        add_header X-Frame-Options "SAMEORIGIN";
        expires +1y;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
        add_header Cache-Control "no-store";
        add_header X-Frame-Options "SAMEORIGIN";
        expires    off;
        try_files $uri $uri/ /get.php$is_args$args;
    }
    add_header X-Frame-Options "SAMEORIGIN";
}

location /media/customer/ {
    deny all;
}

location /media/downloadable/ {
    deny all;
}

location /media/import/ {
    deny all;
}

# PHP entry point for main application
location ~ (index|get|static|report|404|503)\.php$ {
    try_files $uri =404;
    fastcgi_pass   fastcgi_backend;
    fastcgi_buffers 1024 4k;

    fastcgi_read_timeout 600s;
    fastcgi_connect_timeout 600s;

    fastcgi_param  PHP_FLAG  "session.auto_start=off \n suhosin.session.cryptua=off";
    fastcgi_param  PHP_VALUE "memory_limit=768M \n max_execution_time=18000";

    fastcgi_param  MAGE_MODE $MAGE_MODE;
    fastcgi_param  MAGE_RUN_CODE $MAGE_RUN_CODE;
    fastcgi_param  MAGE_RUN_TYPE $MAGE_RUN_TYPE;
    fastcgi_param  ENV {{ env }};

    fastcgi_param  SSL_OFFLOADED $is_https if_not_empty;
    fastcgi_param  HTTPS         $is_https if_not_empty;

    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;
    include        fastcgi_params;
}

# Banned locations (only reached if the earlier PHP entry point regexes don't match)
location ~* (\.php$|\.htaccess$|\.git) {
    deny all;
}
